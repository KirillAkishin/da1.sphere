# Постройте последовательность a1, a2, ... an из n положительных чисел от 1 до k, 
# обладающую следующими свойствами:
# 1. любые два соседних числа в последовательности различны: a1 ≠ a2, a2 ≠ a3, ... an-1 ≠ an;
# 2. каждое число от 1 до k встречается в этой последовательности хотя бы один раз.
# Среди таких последовательностей требуется найти лексикографически минимальную.

def generate_base_sequence(n):
    return [i%2 + 1 for i in range(n)]

param_list = list(map(int, input().split()))
n = int(param_list[0])
k = int(param_list[1])

# Greedy algorithm
l = generate_base_sequence(n)
s = set([1,2])
for i in range(k, 2, -1):
    l[(n-1)-(k-i)] = i

    s.add(i)
    if len(s) == k:
        break
print(*l, sep = " ") 
# 2 2
# 1 2


# 3 2
# 1 2 1

# 3 3
# 1 2 3


# 4 2
# 1 2 1 2

# 4 3
# 1 2 1 3

# 4 4
# 1 2 3 4


# 5 2
# 1 2 1 2 1

# 5 3
# 1 2 1 2 3

# 5 4
# 1 2 1 3 4

# 5 5
# 1 2 3 4 5


# 10 2
# 1 2 1 2 1 2 1 2 1 2

# 10 3
# 1 2 1 2 1 2 1 2 1 3

# 10 4
# 1 2 1 2 1 2 1 2 3 4

# 10 5
# 1 2 1 2 1 2 1 3 4 5

# 10 6
# 1 2 1 2 1 2 3 4 5 6

# 10 7
# 1 2 1 2 1 3 4 5 6 7

# 10 8
# 1 2 1 2 3 4 5 6 7 8

# 10 9
# 1 2 1 3 4 5 6 7 8 9

# 10 10
# 1 2 3 4 5 6 7 8 9 10



# 9 3
# 1 2 1 2 1 2 1 2 1 -- (1,2)
# 1 2 1 2 1 2 1 2 3 -- (1,2,3)

# 9 4
# 1 2 1 2 1 2 1 2 1 -- (1,2)
# 1 2 1 2 1 2 1 2 4 -- (1,2,4)
# 1 2 1 2 1 2 1 3 4 -- (1,2,3,4)

# 9 7
# 1 2 1 2 1 2 1 2 1 -- (1,2)
# 1 2 1 2 1 2 1 2 7 -- (1,2,7)
# 1 2 1 2 1 2 1 6 7 -- (1,2,6,7)
# 1 2 1 2 1 2 5 6 7 -- (1,2,5,6,7)
# 1 2 1 2 1 4 5 6 7 -- (1,2,4,5,6,7)
# 1 2 1 2 3 4 5 6 7 -- (1,2,3,4,5,6,7)

# 9 8
# 1 2 1 2 1 2 1 2 1 -- (1,2)
# 1 2 1 2 1 2 1 2 8 -- (1,2,8)
# 1 2 1 2 1 2 1 7 8 -- (1,2,7,8)
# 1 2 1 2 1 2 6 7 8 -- (1,2,6,7,8)
# 1 2 1 2 1 5 6 7 8 -- (1,2,5,6,7,8)
# 1 2 1 2 4 5 6 7 8 -- (1,2,4,5,6,7,8)
# 1 2 1 3 4 5 6 7 8 -- (1,2,3,4,5,6,7,8)


# 12 6
# 1 2 1 2 1 2 1 2 1 2 1 2 -- (1,2)
# 1 2 1 2 1 2 1 2 1 2 1 6 -- (1,2,6)
# 1 2 1 2 1 2 1 2 1 2 5 6 -- (1,2,5,6)
# 1 2 1 2 1 2 1 2 1 4 5 6 -- (1,2,4,5,6)
# 1 2 1 2 1 2 1 2 3 4 5 6 -- (1,2,3,4,5,6)

